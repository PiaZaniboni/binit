---
import { languages, type Lang } from '../lib/i18n';
import { getUrl, findRouteKeyByPath } from '../lib/routes';
import { menuLabels } from '../lib/menu';

const { lang, currentPath } = Astro.props as { lang: Lang; currentPath: string };

const menuItems = Object.entries(menuLabels[lang]);
const currentRouteKey = findRouteKeyByPath(currentPath, lang);

// Genera todos los otros idiomas que no son el actual
const otherLangs = Object.entries(languages)
  .filter(([code]) => code !== lang)
  .map(([code]) => ({
    code: code as Lang,
    url: currentRouteKey ? getUrl(currentRouteKey, code as Lang) : `/${code}/`,
  }));
---
<header class="site-header">
<nav class="menu">
  <a href={getUrl('home', lang)} class="logo">
    <img src="/img/logo.svg" alt="Logo" width="135" height="40" />
  </a>

  <div class="content-menu">
    <ul class="main-menu">
      {menuItems.map(([routeKey, label], index) => {
        if (index === 0) return null; // Saltar el primer Ã­tem (home/logo)

        const href = getUrl(routeKey, lang);
        const isActive = currentPath === href || currentPath === href?.split('#')[0];

        return (
          <li class={isActive ? 'active' : ''}>
            <a href={href}>{label}</a>
          </li>
        );
      })}
    </ul>

    <ul class="language-switcher">
      <li class="selected">
        <img src={languages[lang].icon} alt={languages[lang].label} width="24" height="16" />
        <span class="language-arrow"></span>
        <ul class="dropdown">
          {otherLangs.map(({ code, url }) => (
            <a href={url}>
              <img src={languages[code].icon} alt={languages[code].label} width="24" height="16" />
            </a>
            ))}
        </ul>
      </li>
    </ul>
  </div>

  <button class="btn-menu-mobile" aria-label="Menu" style="display:none;" >
    <span></span>
    <span></span>
    <span></span>
  </button>
</nav>
</header>
